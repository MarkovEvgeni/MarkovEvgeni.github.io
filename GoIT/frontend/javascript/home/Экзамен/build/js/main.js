"use strict";document.addEventListener("DOMContentLoaded",function(){function e(){var e=document.querySelectorAll(".carousels__item--slides"),t=0-e[0].offsetWidth/3,n=2*t;e[1].style.left=t+"px",e[2].style.left=n+"px"}function t(e){var t=e.parentNode,n=(t.offsetWidth,t.querySelector(".carousels__item--slides"));n.offsetWidth,parseInt(getComputedStyle(n).left);e.addEventListener("mouseover",o),e.addEventListener("mouseout",r),e.addEventListener("click",i)}function n(e){var t=e.parentNode,n=(t.offsetWidth,t.querySelector(".carousels__item--slides"));n.offsetWidth,parseInt(getComputedStyle(n).left);e.addEventListener("mouseover",o),e.addEventListener("mouseout",r),e.addEventListener("click",s)}function o(){this.style.opacity=1,this.style.cursor="pointer"}function r(){this.style.opacity=.5,this.style.cursor="default"}function i(){var e=this.parentNode,t=e.offsetWidth,n=e.querySelector(".carousels__item--slides"),o=n.offsetWidth,r=parseInt(getComputedStyle(n).left);o+r-t==0&&(r=t),r-=t,n.style.left=r+"px"}function s(){var e=this.parentNode,t=e.offsetWidth,n=e.querySelector(".carousels__item--slides"),o=n.offsetWidth,r=parseInt(getComputedStyle(n).left);0==r&&(r=-o),r+=t,n.style.left=r+"px"}window.onresize=e,e();for(var a=document.querySelectorAll(".next"),l=document.querySelectorAll(".prev"),c=0;c<a.length;++c)t(a[c]);for(var c=0;c<l.length;++c)n(l[c])}),Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,o;if(null==this)throw new TypeError(" this is null or not defined");var r=Object(this),i=r.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(arguments.length>1&&(n=t),o=0;o<i;){var s;o in r&&(s=r[o],e.call(n,s,o,r)),o++}}),document.addEventListener("DOMContentLoaded",function(){function e(e,t,n){t=400,n=24;var o=n,r=t,i=r/o;e.preventDefault();var s=a.offsetHeight,d=c.offsetHeight;if(0==s){a.style.height=s+"px",a.classList.remove("non-visible");var u=setInterval(function(){if(i>0){var e=d/(r/o);s+=e,a.style.height=s+"px",i-=1}else clearInterval(u),l.innerHTML="Hide partners"},r/o)}else var u=setInterval(function(){if(i>0){var e=d/(r/o);s-=e,a.style.height=s+"px",i-=1}else clearInterval(u),a.classList.add("non-visible"),l.innerHTML="See other partners"},r/o)}function t(){var e=document.querySelectorAll(".masonry__item");if(e.length>6){var t=document.querySelector(".masonry__item");t.remove()}}function n(){var e=document.querySelector(".mosaic"),t=document.createElement("div");u=t,t.className="text__container masonry__item",e.appendChild(t);var n=document.createElement("div");n.className="inner__text",n.innerHTML=d,t.appendChild(n),r()}function o(){var e=document.querySelector(".mosaic");new Masonry(e,{itemSelector:".masonry__item",columnWidth:5,isAnimated:!0,animationOptions:{queue:!1,duration:500}})}function r(){var e="https://www.googleapis.com/customsearch/v1?q="+d+"&cx=016732624816471061428:3gt2rcxo7lk&imgSize=medium&fileType=jpg&num=1&searchType=image&imgDominantColor=pink&key=AIzaSyBncOk0OKD0p7SEqpnCnj68lZAl0zqxxvo",t=new XMLHttpRequest;t.open("GET",e,!0),t.send(),t.onreadystatechange=function(){if(4==t.readyState)if(200!=t.status)console.log("Изображение по данному запросу не получено "+t.status+": "+t.statusText);else{var e=JSON.parse(t.responseText),n=e.items[0].link,r=e.items[0].image.width,i=e.items[0].image.height,s=r/i;if(s>2)var a=440;else var a=310*s;u.style.backgroundImage="url("+n+")",u.style.width=a+"px",u.style.backgroundSize="auto 310px",o()}}}function i(){function e(e,t){var n="jsonp_callback_"+Math.round(1e5*Math.random());window[n]=function(e){delete window[n],document.body.removeChild(o),t(e)};var o=document.createElement("script");o.src=e+(e.indexOf("?")>=0?"&":"?")+"callback="+n,document.body.appendChild(o)}e("http://randomword.setgetgo.com/get.php",function(e){d=e.Word,t(),n(),o()})}function s(e){e.preventDefault(),d=document.querySelector(".search__input").value,0==d?i():(t(),n(),o())}var a=document.querySelector(".hidden-list"),l=document.querySelector(".partners__link"),c=document.querySelector(".etalon");l.addEventListener("click",e);var d,u,f=0,m=setTimeout(function e(){i(),f++,f<5?m=setTimeout(e,2e3):clearTimeout},2e3),p=document.querySelector(".search__btn");p.addEventListener("click",s)});
//# sourceMappingURL=data:application/json;base64,
