"use strict";document.addEventListener("DOMContentLoaded",function(){function e(){var e=document.querySelectorAll(".carousels__item--slides"),t=0-e[0].offsetWidth/3,n=2*t;e[1].style.left=t+"px",e[2].style.left=n+"px"}function t(e){var t=e.parentNode,n=(t.offsetWidth,t.querySelector(".carousels__item--slides"));n.offsetWidth,parseInt(getComputedStyle(n).left);e.addEventListener("mouseover",o),e.addEventListener("mouseout",r),e.addEventListener("click",i)}function n(e){var t=e.parentNode,n=(t.offsetWidth,t.querySelector(".carousels__item--slides"));n.offsetWidth,parseInt(getComputedStyle(n).left);e.addEventListener("mouseover",o),e.addEventListener("mouseout",r),e.addEventListener("click",s)}function o(){this.style.opacity=1,this.style.cursor="pointer"}function r(){this.style.opacity=.5,this.style.cursor="default"}function i(){var e=this.parentNode,t=e.offsetWidth,n=e.querySelector(".carousels__item--slides"),o=n.offsetWidth,r=parseInt(getComputedStyle(n).left);o+r-t==0&&(r=t),r-=t,n.style.left=r+"px"}function s(){var e=this.parentNode,t=e.offsetWidth,n=e.querySelector(".carousels__item--slides"),o=n.offsetWidth,r=parseInt(getComputedStyle(n).left);0==r&&(r=-o),r+=t,n.style.left=r+"px"}window.onresize=e,e();for(var a=document.querySelectorAll(".next"),l=document.querySelectorAll(".prev"),c=0;c<a.length;++c)t(a[c]);for(var c=0;c<l.length;++c)n(l[c])}),"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),document.addEventListener("DOMContentLoaded",function(){function e(e,r,i){r=400,i=24;var s=i,a=r,l=a/s;e.preventDefault();var c=t.offsetHeight,d=o.offsetHeight;if(0==c){t.style.height=c+"px",t.classList.remove("non-visible");var u=setInterval(function(){if(l>0){var e=d/(a/s);c+=e,t.style.height=c+"px",l-=1}else clearInterval(u),n.innerHTML="Hide partners"},a/s)}else var u=setInterval(function(){if(l>0){var e=d/(a/s);c-=e,t.style.height=c+"px",l-=1}else clearInterval(u),t.classList.add("non-visible"),n.innerHTML="See other partners"},a/s)}var t=document.querySelector(".hidden-list"),n=document.querySelector(".partners__link"),o=document.querySelector(".etalon");n.addEventListener("click",e)}),Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,o;if(null==this)throw new TypeError(" this is null or not defined");var r=Object(this),i=r.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(arguments.length>1&&(n=t),o=0;o<i;){var s;o in r&&(s=r[o],e.call(n,s,o,r)),o++}}),document.addEventListener("DOMContentLoaded",function(){function e(){var e=document.querySelectorAll(".masonry__item");if(e.length>6){var t=document.querySelector(".masonry__item");t.remove()}}function t(){var e=document.querySelector(".mosaic"),t=document.createElement("div");a=t,t.className="text__container masonry__item",e.appendChild(t);var n=document.createElement("div");n.className="inner__text",n.innerHTML=s,t.appendChild(n),o()}function n(){var e=document.querySelector(".mosaic");new Masonry(e,{itemSelector:".masonry__item",columnWidth:5,isAnimated:!0,animationOptions:{queue:!1,duration:500}})}function o(){var e="https://www.googleapis.com/customsearch/v1?q="+s+"&cx=016732624816471061428:3gt2rcxo7lk&imgSize=medium&fileType=jpg&num=1&searchType=image&imgDominantColor=pink&key=AIzaSyBncOk0OKD0p7SEqpnCnj68lZAl0zqxxvo",t=new XMLHttpRequest;t.open("GET",e,!0),t.send(),t.onreadystatechange=function(){if(4==t.readyState)if(200!=t.status)console.log("Изображение по данному запросу не получено "+t.status+": "+t.statusText);else{var e=JSON.parse(t.responseText),o=e.items[0].link,r=e.items[0].image.width,i=e.items[0].image.height,s=r/i;if(s>2)var l=440;else var l=310*s;a.style.backgroundImage="url("+o+")",a.style.width=l+"px",a.style.backgroundSize="auto 310px",n()}}}function r(){function o(e,t){var n="jsonp_callback_"+Math.round(1e5*Math.random());window[n]=function(e){window[n]=null,document.body.removeChild(o),t(e)};var o=document.createElement("script");o.src=e+(e.indexOf("?")>=0?"&":"?")+"callback="+n,document.body.appendChild(o)}o("http://randomword.setgetgo.com/get.php",function(o){s=o.Word,e(),t(),n()})}function i(o){o.preventDefault(),s=document.querySelector(".search__input").value,0==s?r():(e(),t(),n())}var s,a,l=0,c=setTimeout(function e(){l<5?(r(),l++,c=setTimeout(e,2e3)):clearTimeout(c)},2e3),d=document.querySelector(".search__btn");d.addEventListener("click",i)});
//# sourceMappingURL=data:application/json;base64,
