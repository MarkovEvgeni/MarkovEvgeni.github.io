{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,6R;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACqB;AAS/D;IACE,sBAAoB,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;IAAI,CAAC;IAC1D,wCAAiB,GAAjB;QACE,IAAI,CAAC,WAAW,CAAC,YAAY;aAC1B,SAAS,CACR,UAAC,KAAK,IAAO,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7E,UAAC,KAAK,IAAO,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;IACN,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ;aACtB,SAAS,CAAC,UAAC,OAAO,IAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAbU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAEiC,4EAAoB;OAD1C,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACM;AACG;AACe;AACA;AACN;AACU;AACX;AAc1D;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAZrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;gBACrD,8EAAsB;gBACtB,wEAAqB;gBACrB,8EAAwB;gBACxB,kFAA0B;aAC3B;YACD,YAAY,EAAE,CAAE,2DAAY,CAAE;YAC9B,SAAS,EAAE,CAAE,2DAAY,CAAE;SAC5B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;ACtBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAQ;IAC9B,UAAU,EAAE,KAAK;IACnB,eAAe;IACf,wDAAwD;IACxD,sDAAsD;IACtD,8DAA8D;IAC9D,qCAAqC;IACrC,qDAAqD;IACrD,uCAAuC;IACvC,KAAK;IACH,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,oCAAoC;QAChD,WAAW,EAAE,2CAA2C;QACxD,SAAS,EAAE,oBAAoB;QAC/B,aAAa,EAAE,gCAAgC;QAC/C,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AC/BnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"\\\">\\n   <button (click)=\\\"requestPermission()\\\">\\n    Hey this is a chat app, you should let us send you notifications for these reasons!\\n  </button>\\n</div>\\n<div class=\\\"\\\">\\n  \\n  <button (click)=\\\"listen()\\\">\\n    Get notified!\\n  </button>\\n</div>\"","import { Component } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { auth } from 'firebase/app';\nimport { mergeMapTo } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n  constructor(private afMessaging: AngularFireMessaging) { }\n  requestPermission() {\n    this.afMessaging.requestToken\n      .subscribe(\n        (token) => { console.log('Permission granted! Save to the server!', token); },\n        (error) => { console.error(error); },  \n      );\n  }\n  \n  listen() {\n    this.afMessaging.messages\n      .subscribe((message) => { console.log(message); });\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase), // imports firebase/app needed for everything\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule, // imports firebase/storage only needed for storage features\n    AngularFireMessagingModule\n  ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: any = {\n  production: false,\n//  firebase: {\n//    apiKey: 'AIzaSyC0Sx63XEFXYmR3TbcWZPepAqUObRP2IF0',\n//    authDomain: 'memento-admin-web.firebaseapp.com',\n//    databaseURL: 'https://memento-admin-web.firebaseio.com',\n//    projectId: 'memento-admin-web',\n//    storageBucket: 'memento-admin-web.appspot.com',\n//    messagingSenderId: '908342910622'\n//  }\n  firebase: {\n    apiKey: 'AIzaSyCj5JVfOWO2li9_8QJWRA5C_QepwVKdO8M',\n    authDomain: 'memento-test-66621.firebaseapp.com',\n    databaseURL: 'https://memento-test-66621.firebaseio.com',\n    projectId: 'memento-test-66621',\n    storageBucket: 'memento-test-66621.appspot.com',\n    messagingSenderId: '226624261733'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}